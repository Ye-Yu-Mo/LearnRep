// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: contacts.proto
// Protobuf C++ Version: 5.30.0-dev

#include "contacts.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace contacts {

inline constexpr contact::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        telnumber_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adders_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR contact::contact(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(contact_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct contactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR contactDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~contactDefaultTypeInternal() {}
  union {
    contact _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 contactDefaultTypeInternal _contact_default_instance_;
}  // namespace contacts
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_contacts_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_contacts_2eproto = nullptr;
const ::uint32_t
    TableStruct_contacts_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::contacts::contact, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::contacts::contact, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::contacts::contact, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::contacts::contact, _impl_.telnumber_),
        PROTOBUF_FIELD_OFFSET(::contacts::contact, _impl_.adders_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::contacts::contact)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::contacts::_contact_default_instance_._instance,
};
const char descriptor_table_protodef_contacts_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016contacts.proto\022\010contacts\"F\n\007contact\022\n\n"
    "\002ID\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\021\n\tTelNumber\030\003 \001"
    "(\t\022\016\n\006Adders\030\004 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_contacts_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_contacts_2eproto = {
    false,
    false,
    106,
    descriptor_table_protodef_contacts_2eproto,
    "contacts.proto",
    &descriptor_table_contacts_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_contacts_2eproto::offsets,
    file_level_enum_descriptors_contacts_2eproto,
    file_level_service_descriptors_contacts_2eproto,
};
namespace contacts {
// ===================================================================

class contact::_Internal {
 public:
};

contact::contact(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, contact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:contacts.contact)
}
inline PROTOBUF_NDEBUG_INLINE contact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::contacts::contact& from_msg)
      : name_(arena, from.name_),
        telnumber_(arena, from.telnumber_),
        adders_(arena, from.adders_),
        _cached_size_{0} {}

contact::contact(
    ::google::protobuf::Arena* arena,
    const contact& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, contact_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  contact* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:contacts.contact)
}
inline PROTOBUF_NDEBUG_INLINE contact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        telnumber_(arena),
        adders_(arena),
        _cached_size_{0} {}

inline void contact::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
contact::~contact() {
  // @@protoc_insertion_point(destructor:contacts.contact)
  SharedDtor(*this);
}
inline void contact::SharedDtor(MessageLite& self) {
  contact& this_ = static_cast<contact&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.telnumber_.Destroy();
  this_._impl_.adders_.Destroy();
  this_._impl_.~Impl_();
}

inline void* contact::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) contact(arena);
}
constexpr auto contact::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(contact),
                                            alignof(contact));
}
constexpr auto contact::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_contact_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &contact::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<contact>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &contact::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<contact>(), &contact::ByteSizeLong,
              &contact::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(contact, _impl_._cached_size_),
          false,
      },
      &contact::kDescriptorMethods,
      &descriptor_table_contacts_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        contact_class_data_ =
            contact::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* contact::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&contact_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(contact_class_data_.tc_table);
  return contact_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> contact::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    contact_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::contacts::contact>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string Adders = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(contact, _impl_.adders_)}},
    // uint64 ID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(contact, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(contact, _impl_.id_)}},
    // string Name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(contact, _impl_.name_)}},
    // string TelNumber = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(contact, _impl_.telnumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 ID = 1;
    {PROTOBUF_FIELD_OFFSET(contact, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string Name = 2;
    {PROTOBUF_FIELD_OFFSET(contact, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string TelNumber = 3;
    {PROTOBUF_FIELD_OFFSET(contact, _impl_.telnumber_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string Adders = 4;
    {PROTOBUF_FIELD_OFFSET(contact, _impl_.adders_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\4\11\6\0\0\0"
    "contacts.contact"
    "Name"
    "TelNumber"
    "Adders"
  }},
};

PROTOBUF_NOINLINE void contact::Clear() {
// @@protoc_insertion_point(message_clear_start:contacts.contact)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.telnumber_.ClearToEmpty();
  _impl_.adders_.ClearToEmpty();
  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* contact::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const contact& this_ = static_cast<const contact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* contact::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const contact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:contacts.contact)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 ID = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // string Name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "contacts.contact.Name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string TelNumber = 3;
          if (!this_._internal_telnumber().empty()) {
            const std::string& _s = this_._internal_telnumber();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "contacts.contact.TelNumber");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string Adders = 4;
          if (!this_._internal_adders().empty()) {
            const std::string& _s = this_._internal_adders();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "contacts.contact.Adders");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:contacts.contact)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t contact::ByteSizeLong(const MessageLite& base) {
          const contact& this_ = static_cast<const contact&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t contact::ByteSizeLong() const {
          const contact& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:contacts.contact)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string Name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string TelNumber = 3;
            if (!this_._internal_telnumber().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_telnumber());
            }
            // string Adders = 4;
            if (!this_._internal_adders().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_adders());
            }
            // uint64 ID = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void contact::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<contact*>(&to_msg);
  auto& from = static_cast<const contact&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:contacts.contact)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_telnumber().empty()) {
    _this->_internal_set_telnumber(from._internal_telnumber());
  }
  if (!from._internal_adders().empty()) {
    _this->_internal_set_adders(from._internal_adders());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void contact::CopyFrom(const contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:contacts.contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void contact::InternalSwap(contact* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.telnumber_, &other->_impl_.telnumber_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adders_, &other->_impl_.adders_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata contact::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace contacts
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_contacts_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
